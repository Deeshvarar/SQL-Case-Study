USE CASESTUDY

-- Create LOCATION table
CREATE TABLE LOCATIONS (
    Location_ID INT PRIMARY KEY,
    City VARCHAR(50)
);

-- Insert data into LOCATION table
INSERT INTO LOCATIONS VALUES
    (122, 'New York'),
    (123, 'Dallas'),
    (124, 'Chicago'),
    (167, 'Boston');

-- Create DEPARTMENT table
CREATE TABLE DEPARTMENT (
    Department_Id INT PRIMARY KEY,
    Name VARCHAR(50),
    Location_Id INT,
    FOREIGN KEY (Location_Id) REFERENCES LOCATIONS (Location_ID)
);

-- Insert data into DEPARTMENT table
INSERT INTO DEPARTMENT VALUES
    (10, 'Accounting', 122),
    (20, 'Sales', 124),
    (30, 'Research', 123),
    (40, 'Operations', 167);

-- Create JOB table
CREATE TABLE JOB (
    Job_ID INT PRIMARY KEY,
    Designation VARCHAR(50)
);

-- Insert data into JOB table
INSERT INTO JOB VALUES
    (667, 'Clerk'),
    (668, 'Staff'),
    (669, 'Analyst'),
    (670, 'Sales Person'),
    (671, 'Manager'),
    (672, 'President');

-- Create EMPLOYEE table
CREATE TABLE EMPLOYEE (
    Employee_Id INT,
    Last_Name VARCHAR(50),
    First_Name VARCHAR(50),
    Middle_Name VARCHAR(50),
    Job_Id INT FOREIGN KEY REFERENCES JOB (Job_ID),
    Manager_ID INT,
    Hire_Date DATE,
    Salary DECIMAL(10, 2),
    Commission DECIMAL(10, 2),
    Department_Id INT FOREIGN KEY REFERENCES DEPARTMENT (Department_Id),
);

-- Insert data into EMPLOYEE table
INSERT INTO EMPLOYEE VALUES
(7369, 'SMITH', 'JOHN', 'Q', 667, 7902, '1984-12-17', 800, NULL, 20)
,(7499, 'ALLEN', 'KEVIN', 'J', 670, 7698, '1985-02-20', 1600, 300, 30)
,(7505, 'DOYLE', 'JEAN', 'K', 671, 7839, '1985-04-04', 2850, NULL, 30)
,(7506, 'DENNIS', 'LYNN', 'S', 671, 7839, '1985-05-15', 2750, NULL, 30)
,(7507, 'BAKER', 'LESLIE', 'D', 671, 7839, '1985-06-10', 2200, NULL, 40)
,(7521, 'WARK', 'CYNTHIA', 'D', 670, 7698, '1985-02-22', 1250, 500, 30)

--SIMPLE QUERIES:
--1. LIST ALL THE EMPLOYEE DETAILS.
SELECT * FROM EMPLOYEE

--2. LIST ALL THE DEPARTMENT DETAILS
SELECT * FROM DEPARTMENT

--3. LIST ALL JOB DETAILS.
SELECT * FROM JOB

--4. LIST ALL THE LOCATIONS.
SELECT * FROM LOCATIONS

--5. LIST OUT THE FIRSTNAME, LASTNAME, SALARY, COMMISSION FOR ALL EMPLOYEES.
SELECT FIRST_NAME
	, LAST_NAME
	, SALARY
	, COMMISSION 
FROM  EMPLOYEE

--6. LIST OUT EMPLOYEEID,LAST NAME, DEPARTMENT ID FOR ALL EMPLOYEES AND ALIAS EMPLOYEEID AS "ID OF THE EMPLOYEE", LAST NAME AS "NAME OF THE EMPLOYEE",DEPARTMENTID AS "DEP_ID".
SELECT 
	EMPLOYEE_ID AS 'ID OF THE EMPLOYEE'
	,LAST_NAME AS 'NAME OF THE EMPLOYEE'
	, DEPARTMENT_ID AS 'dEPT_ID' 
FROM EMPLOYEE 

--7. LIST OUT THE EMPLOYEES ANNUAL SALARY WITH THEIR NAMES ONLY.
 SELECT FIRST_NAME
 ,LAST_NAME
 ,SALARY
 FROM EMPLOYEE

 --WHERE CONDITION:
--1. LIST THE DETAILS ABOUT "SMITH"
SELECT * FROM EMPLOYEE 
WHERE 
LAST_NAME = 'SMITH'

--2. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 20.
SELECT * FROM EMPLOYEE 
WHERE 
DEPARTMENT_ID = 20

--3. LIST OUT THE EMPLOYEES WHO ARE EARNING SALARY BETWEEN 3000 AND 4500.
SELECT * FROM EMPLOYEE 
WHERE 
SALARY BETWEEN 3000 AND 4500

--4. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 OR 20.
SELECT * FROM EMPLOYEE 
WHERE DEPARTMENT_ID = 10
OR
DEPARTMENT_ID = 20

--5. FIND OUT THE EMPLOYEES WHO ARE NOT WORKING IN DEPARTMENT 10 OR 30.
SELECT * FROM EMPLOYEE
WHERE
DEPARTMENT_ID NOT IN (10,30)

--6. LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S'.
SELECT * FROM EMPLOYEE 
WHERE
LAST_NAME LIKE '%S'

--7. LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S' AND ENDS WITH 'H'.
SELECT * FROM EMPLOYEE 
WHERE
LAST_NAME LIKE 'S%H'

--8. LIST OUT THE EMPLOYEES WHOSE NAME LENGTH IS 4 AND START WITH 'S'.
SELECT * FROM EMPLOYEE 
WHERE
LAST_NAME LIKE 'S%' OR LEN(LAST_NAME) = 4

--9. LIST OUT EMPLOYEES WHO ARE WORKING IN DEPARRTMENT 10 AND DRAW THE SALARIES MORE THAN 3500.
SELECT * FROM EMPLOYEE 
WHERE 
DEPARTMENT_ID = 10 AND SALARY >= 3500


--10. LIST OUT THE EMPLOYEES WHO ARE NOT RECEVING COMMISSION.
SELECT *  FROM EMPLOYEE
WHERE
COMMISSION IS NULL

--ORDER BY CLAUSE:
--1. LIST OUT THE EMPLOYEE ID, LAST NAME IN ASCENDING ORDER BASED ON THE EMPLOYEE ID.
SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEE
ORDER BY
EMPLOYEE_ID

--2. LIST OUT THE EMPLOYEE ID, NAME IN DESCENDING ORDER BASED ON SALARY.
SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEE
ORDER BY SALARY DESC

--3. LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER
SELECT * FROM EMPLOYEE 
ORDER BY
LAST_NAME ASC

--4. LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER AND THEN ON DEPARTMENT_ID IN DESCENDING ORDER.
SELECT * FROM EMPLOYEE
ORDER BY 
LAST_NAME

SELECT * FROM EMPLOYEE
ORDER BY
DEPARTMENT_ID DESC

--GROUP BY & HAVING CLAUSE
--1. HOW MANY EMPLOYEES WHO ARE IN DIFFERENT DEPARTMENTS WISE IN THE ORGANIZATION.
SELECT COUNT(LAST_NAME) AS 'NO. OF. EMPLOYEES' 
FROM EMPLOYEE
GROUP BY 
DEPARTMENT_ID

--2. LIST OUT THE DEPARTMENT WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARY OF THE EMPLOYEES.
SELECT MAX(SALARY) MAX_SALARY
	, MIN(SALARY) MIN_SALARY
	, AVG(SALARY) AVAG_SALARY 
FROM EMPLOYEE

--3. LIST OUT JOB WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARIES OF THE EMPLOYEES.
SELECT MAX(SALARY) MAX_SALARY
	, MIN(SALARY) MIN_SALARY
	, AVG(SALARY) AVAG_SALARY 
FROM EMPLOYEE 
GROUP BY
JOB_ID

--4. LIST OUT THE NUMBER OF EMPLOYEES JOINED IN EVERY MONTH IN ASCENDING ORDER.
SELECT MONTH(HIRE_DATE) AS 'MONTH', COUNT(*) AS 
'NO.OF.EMPLOYEES' FROM EMPLOYEE 
GROUP BY MONTH(HIRE_DATE) 
ORDER BY MONTH(HIRE_DATE)
 
--5. LIST OUT THE NUMBER OF EMPLOYEES FOR EACH MONTH AND YEAR, IN THE ASCENDING ORDER BASED ON THE YEAR, MONTH.
SELECT COUNT(*) AS 'NO.OF.EMPLOYEES'
	,MONTH(HIRE_DATE) AS 'MONTH'
	,YEAR (HIRE_DATE) AS 'YEAR' FROM EMPLOYEE 
GROUP BY MONTH(HIRE_DATE)
	,YEAR(HIRE_DATE)
ORDER BY
	YEAR(HIRE_DATE), MONTH(HIRE_DATE)


--6. LIST OUT THE DEPARTMENT ID HAVING ATLEAST FOUR EMPLOYEES.
SELECT DEPARTMENT_ID AS 'DEPARTMENT_ID' 
FROM EMPLOYEE
GROUP BY DEPARTMENT_ID
HAVING COUNT(*) >=4

--7. HOW MANY EMPLOYEES JOINED IN JANUARY MONTH.
SELECT COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEE 
GROUP BY MONTH(HIRE_DATE) 
HAVING MONTH(HIRE_DATE) = 1
 
--8. HOW MANY EMPLOYEES JOINED IN JANUARY OR SEPTEMBER MONTH.
SELECT COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEE 
GROUP BY MONTH(HIRE_DATE) 
HAVING MONTH(HIRE_DATE) = 1 OR 
MONTH(HIRE_DATE) = 9

--9. HOW MANY EMPLOYEES WERE JOINED IN 1985?
SELECT COUNT(*) AS EMPLOYEE_COUNT FROM EMPLOYEE
GROUP BY YEAR(HIRE_DATE)
HAVING YEAR(HIRE_DATE)=1985

--10. HOW MANY EMPLOYEES WERE JOINED EACH MONTH IN 1985.
SELECT COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEE 
GROUP BY MONTH(HIRE_DATE),YEAR(HIRE_DATE)
HAVING YEAR(HIRE_DATE) = 1985

--11. HOW MANY EMPLOYEES WERE JOINED IN MARCH 1985?
SELECT COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEE 
GROUP BY MONTH(HIRE_DATE),YEAR(HIRE_DATE)
HAVING  MONTH(HIRE_DATE) = 3 OR YEAR(HIRE_DATE) = 1985 

--12. WHICH IS THE DEPARTMENT ID, HAVING GREATER THAN OR EQUAL TO 3 EMPLOYEES JOINED IN APRIL 1985?
SELECT DEPARTMENT_ID, COUNT(*) EMPLOYEE_COUNT
,MONTH(HIRE_DATE) MONTH
,YEAR(HIRE_DATE) YEAR FROM EMPLOYEE
GROUP BY MONTH(HIRE_DATE)
,YEAR(HIRE_DATE)
,DEPARTMENT_ID
HAVING MONTH(HIRE_DATE) = 4 AND YEAR(HIRE_DATE) = 1985 AND COUNT(*) >=3



SELECT*FROM EMPLOYEE
SELECT*FROM DEPARTMENT
SELECT * FROM JOB
SELECT * FROM LOCATIONS

--JOINS
--1. LIST OUT EMPLOYEES WITH THEIR DEPARTMENT NAMES.
SELECT E.LAST_NAME,D.NAME FROM EMPLOYEE E 
JOIN
DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID

--2. DISPLAY EMPLOYEES WITH THEIR DESIGNATIONS.
SELECT E.LAST_NAME, J.DESIGNATION FROM EMPLOYEE E
JOIN JOB J
ON E.JOB_ID = J.Job_ID

--3. DISPLAY THE EMPLOYEES WITH THEIR DEPARTMENT NAMES AND REGIONAL GROUPS.

SELECT E.*,D.Name, L.CITY, L.Location_ID
FROM EMPLOYEE E
JOIN
DEPARTMENT D ON E.Department_Id = D.Department_Id
JOIN
LOCATIONS L ON D.Location_Id = L.Location_ID
ORDER BY E.Department_Id

--4. HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS AND DISPLAY WITH DEPARTMENT NAMES.
SELECT COUNT(E.FIRST_NAME),D.Name, E.Department_Id FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.Department_Id = D.Department_Id
GROUP BY E.Department_Id,D.Name

--5. HOW MANY EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT.
SELECT COUNT(E.Employee_Id) AS COUN_IN_SALES FROM EMPLOYEE E
JOIN
DEPARTMENT D ON
E.Department_Id = D.Department_Id 
GROUP BY D.Name
HAVING D.NAME = 'SALES'

--OR

SELECT COUNT(E.Employee_Id) AS COUN_IN_SALES FROM EMPLOYEE E
JOIN
DEPARTMENT D ON
E.Department_Id = D.Department_Id 
WHERE D.NAME ='SALES'


--6. WHICH IS THE DEPARTMENT HAVING GREATER THAN OR EQUAL TO 5 EMPLOYEES AND DISPLAY THE DEPARTMENT NAMES IN ASCENDING ORDER.
SELECT D.NAME FROM DEPARTMENT D
JOIN
EMPLOYEE E ON E.Department_Id = D.Department_Id
GROUP BY E.Department_Id,D.Name
HAVING COUNT(E.Employee_Id)>=2
ORDER BY D.NAME

--7. HOW MANY JOBS IN THE ORGANIZATION WITH DESIGNATIONS.
SELECT COUNT(J.DESIGNATION) AS COUNT_DESGN FROM JOB J
JOIN
EMPLOYEE E ON J.Job_ID =E.Job_Id
GROUP BY J.Designation

--8. HOW MANY EMPLOYEES ARE WORKING IN "NEW YORK".
SELECT COUNT(E.EMPLOYEE_ID) AS NO_OF_EMPLOYEE 
FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.Department_Id = D.Department_Id
JOIN
LOCATIONS L ON D.Location_Id = L.LOCATION_ID  
WHERE L.LOCATION_ID = 122
--9. DISPLAY THE EMPLOYEE DETAILS WITH SALARY GRADES.
--10. LIST OUT THE NO. OF EMPLOYEES ON GRADE WISE.
--11. DISPLAY THE EMPLOYEE SALARY GRADES AND NO. OF EMPLOYEES BETWEEN 2000 TO 5000 RANGE OF SALARY.